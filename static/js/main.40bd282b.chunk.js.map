{"version":3,"sources":["components/Explanation.js","App.js","index.js"],"names":["classNames","require","Explanation","timer","props","explanation","handleText","_handleText","Object","slicedToArray","fullText","setFullText","classes","overlay","react_default","a","createElement","className","onClick","str","num","i","length","test","slice","truncate","cache","App","_useState","useState","_useState2","viewing","setViewing","_useState3","Date","_useState4","selectedDate","selectDate","_useState5","_useState6","isTextHidden","setTextHidden","_useState7","_useState8","formatDate","d","toISOString","match","fetchImageData","dateString","options","concat","axios","get","then","_ref","data","console","log","date","catch","err","dir","handleKeyUp","e","which","setDate","getDate","now","handleTimer","clearInterval","setTimeout","useEffect","document","onkeyup","onmousemove","querySelector","classList","add","hdurl","title","media_type","url","text-hidden","umd_default","src","onLoad","loader","Spinner","type","style","color","width","height","ReactPlayer_default","id","window","innerWidth","innerHeight","playing","components_Explanation","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.40bd282b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nconst classNames = require(\"classnames\");\n\nfunction truncate(str, num) {\n  if (str && str[num]) {\n    for (let i = num; i < str.length; i++) {\n      if (/\\W/.test(str[i]) && str[i + 1]) {\n        str = str.slice(0, i) + \"...\";\n        break;\n      }\n    }\n  }\n  return str;\n}\n\nfunction Explanation(props) {\n  const { explanation, handleText } = props;\n  const [fullText, setFullText] = handleText;\n  const classes = classNames(\"explanation\", { overlay: fullText });\n  return (\n    <div className={classes} onClick={() => setFullText(!fullText)}>\n      <p>{fullText ? explanation : truncate(explanation, 200)}</p>\n    </div>\n  );\n}\n\nexport default Explanation;\n","import React, { useEffect, useState } from \"react\";\nimport Explanation from \"./components/Explanation\";\nimport Img from \"react-image\";\nimport ReactPlayer from \"react-player\";\nimport { Spinner } from \"reactstrap\";\nimport axios from \"axios\";\nimport \"./App.scss\";\n\nconst classNames = require(\"classnames\");\nlet timer;\nconst cache = {};\n\nfunction App() {\n  const [viewing, setViewing] = useState({});\n  const [selectedDate, selectDate] = useState(new Date());\n  const [isTextHidden, setTextHidden] = useState(false);\n  const [fullText, setFullText] = useState(false);\n\n  const formatDate = d => d.toISOString().match(/[^T]*/)[0];\n\n  function fetchImageData(dateString) {\n    const baseUrl = `https://api.nasa.gov/planetary/apod`;\n    const options = `?api_key=DEMO_KEY&date=${dateString}`;\n\n    axios\n      .get(baseUrl + options)\n      .then(({ data }) => {\n        console.log(\"data received\");\n        cache[dateString] = data;\n        if (data.date === formatDate(selectedDate)) {\n          setViewing(data);\n        }\n      })\n      .catch(err => {\n        console.dir(err);\n      });\n  }\n\n  useEffect(() => {\n    console.log(cache);\n    // fetches and caches 5 image datasets\n    for (let i = 0; i < 5; i++) {\n      const d = new Date(selectedDate);\n      d.setDate(d.getDate() - i);\n      const dateString = formatDate(d);\n      if (!cache[dateString]) {\n        fetchImageData(dateString);\n      } else if (i === 0) {\n        setViewing(cache[dateString]);\n      }\n    }\n  }, [selectedDate]);\n\n  useEffect(() => {\n    document.onkeyup = handleKeyUp;\n  }, [viewing]);\n\n  useEffect(() => {\n    document.onmousemove = function(e) {\n      if (isTextHidden) {\n        setTextHidden(false);\n        handleTimer();\n      }\n    };\n  }, [isTextHidden]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      document.querySelector(\".tip\").classList.add(\"fade-out\");\n    }, 2500);\n  }, []);\n\n  function handleKeyUp(e) {\n    setTextHidden(false);\n    const d = new Date(selectedDate);\n    switch (e.which) {\n      case 37:\n        d.setDate(d.getDate() - 1);\n        selectDate(d);\n        break;\n      case 39:\n        d.setDate(d.getDate() + 1);\n        if (d <= Date.now()) {\n          selectDate(d);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  function handleTimer() {\n    clearInterval(timer);\n    timer = setTimeout(() => setTextHidden(true), 3000);\n  }\n\n  const { date, explanation, hdurl, title, media_type, url } = viewing;\n  const classes = classNames(\"fader\", {\n    \"text-hidden\": isTextHidden && !fullText\n  });\n\n  return (\n    <div className=\"app\">\n      {media_type === \"image\" && (\n        <Img\n          className=\"hd-image\"\n          src={hdurl}\n          onLoad={handleTimer}\n          loader={\n            <Spinner\n              type=\"grow\"\n              style={{ color: \"#fff\", width: \"3rem\", height: \"3rem\" }}\n            />\n          }\n        />\n      )}\n      {media_type === \"video\" && (\n        <ReactPlayer\n          id=\"video\"\n          url={url}\n          width={window.innerWidth}\n          height={window.innerHeight}\n          playing\n        />\n      )}\n      <div className={classes}>\n        <h1>{title}</h1>\n        <Explanation\n          explanation={explanation}\n          handleText={[fullText, setFullText]}\n        />\n        <time>{date}</time>\n      </div>\n      <div className=\"tip\">Use ← or → keys to navigate</div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}